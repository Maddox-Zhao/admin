#set($layout = "layout/default.vm")
<head>
  #set($title = "尚上后台管理系统")
<script type="text/javascript"> 
function check()
{
	var form = document.saveAcquisition;
	if(form.acpCode.value == "")
	{
		alert("收购编号不能为空");
		return false;
	}
	else if(form.acpCode.value.substr(0,2) != "SG")
	{
		alert("收购编号必须以SG开头")
		return false;
	}
	else if(form.name.value == "")
	{
		alert("姓名不能为空");
		return false;
	}
	else if(form.phone.value == "")
	{
		alert("请填写正确的手机号码！");
		return false;
	}
	else if(!IDCardCheck(form.idcards.value))
		return false

	return true;
}


function isMobil(s) {
    var patrn = /(^0{0,1}1[3|4|5|6|7|8|9][0-9]{9}$)/;
    if (!patrn.exec(s)) {
        return false;
    }
    return true;
}
/*
function IDCardCheck(num) {
    num = num.toUpperCase();
    //身份证号码为15位或者18位，15位时全为数字，18位前17位为数字，最后一位是校验位，可能为数字或字符X。   
    if (!(/(^\d{15}$)|(^\d{17}([0-9]|X)$)/.test(num))) {
        alert('输入的身份证号长度不对，或者号码不符合规定！\n15位号码应全为数字，18位号码末位可以为数字或X。');
        return false;
    }
    //校验位按照ISO 7064:1983.MOD 11-2的规定生成，X可以认为是数字10。 
    //下面分别分析出生日期和校验位 
    var len, re;
    len = num.length;
    if (len == 15) {
        re = new RegExp(/^(\d{6})(\d{2})(\d{2})(\d{2})(\d{3})$/);
        var arrSplit = num.match(re);

        //检查生日日期是否正确 
        var dtmBirth = new Date('19' + arrSplit[2] + '/' + arrSplit[3] + '/' + arrSplit[4]);
        var bGoodDay;
        bGoodDay = (dtmBirth.getYear() == Number(arrSplit[2])) && ((dtmBirth.getMonth() + 1) == Number(arrSplit[3])) && (dtmBirth.getDate() == Number(arrSplit[4]));
        if (!bGoodDay) {
            alert('输入的身份证号里出生日期不对！');
            return false;
        }
        else {
            //将15位身份证转成18位 
            //校验位按照ISO 7064:1983.MOD 11-2的规定生成，X可以认为是数字10。 
            var arrInt = new Array(7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2);
            var arrCh = new Array('1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2');
            var nTemp = 0, i;
            num = num.substr(0, 6) + '19' + num.substr(6, num.length - 6);
            for (i = 0; i < 17; i++) {
                nTemp += num.substr(i, 1) * arrInt[i];
            }
            num += arrCh[nTemp % 11];
            return true;
        }
    }
    if (len == 18) {
        re = new RegExp(/^(\d{6})(\d{4})(\d{2})(\d{2})(\d{3})([0-9]|X)$/);
        var arrSplit = num.match(re);

        //检查生日日期是否正确 
        var dtmBirth = new Date(arrSplit[2] + "/" + arrSplit[3] + "/" + arrSplit[4]);
        var bGoodDay;
        bGoodDay = (dtmBirth.getFullYear() == Number(arrSplit[2])) && ((dtmBirth.getMonth() + 1) == Number(arrSplit[3])) && (dtmBirth.getDate() == Number(arrSplit[4]));
        if (!bGoodDay) {
            alert(dtmBirth.getYear());
            alert(arrSplit[2]);
            alert('输入的身份证号里出生日期不对！');
            return false;
        }
        else {
            //检验18位身份证的校验码是否正确。 
            //校验位按照ISO 7064:1983.MOD 11-2的规定生成，X可以认为是数字10。 
            var valnum;
            var arrInt = new Array(7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2);
            var arrCh = new Array('1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2');
            var nTemp = 0, i;
            for (i = 0; i < 17; i++) {
                nTemp += num.substr(i, 1) * arrInt[i];
            }
            valnum = arrCh[nTemp % 11];
            if (valnum != num.substr(17, 1)) {
                alert('18位身份证的校验码不正确！'); //应该为： + valnum
                return false;
            }
            return true;
        }
    }
    return false;
}
*/
</script>

<style type="text/css">
.red{color:red}
	
</style>
</head>

	<div class="main">
    	 <h2>添加收购凭证</h2>
		
		 	
		 #set($message = $request.getParameter('message'))
		 #if($!message)
		<div class="mag-t2">
				$!message
		</div>
		 #end
		 
		 <center>
		 <form action="save.html" name="saveAcquisition" method="post"  enctype="multipart/form-data" onsubmit="return check()">
				收购编号:
				#springBind("acquisition.acpCode")
			  <input type="text" name="$!{status.expression}" value="$!{status.value}"  id="conId" maxlength="10" class="inp inp-w105" onblur="javascript:if(this.value.substr(0,2) != 'SG') alert('编号必须以SG开头') " /><span class="red" id="msg">*</span><br/><br/>
			  
			  客户名字：
			  #springBind("customer.name")
			  <input type="text" name="${status.expression}" value="$!{status.value}" id="name" maxlength="10" class="inp inp-w105" /><span class="red">*</span><br/><br/>
			  
			  客户联系方式：
			  #springBind("customer.phone")
			  <input type="text" name="${status.expression}"  value="$!{status.value}" id="phone"  maxlength="14" class="inp inp-w105"  onkeyup="value=value.replace(/[^\d]/g,'')"/><span class="red">*</span><br/><br/>

			  客户身份证号:
			  #springBind("acquisition.idcards")
			  <input type="text"  onkeyup="value=value.replace(/[^\d]/g,'')" style="width:150px"  name="${status.expression}" value="$!{status.value}" id="idcards"  class="inp inp-w105"  maxlength="18"/> <span class="red">*</span><br/><br/>
			  
			  收购凭证图片:
			  <input type="file" name="img"/><br/><br/>
			  客户身份证图片:
			  <input type="file" name="img2"/><br/><br/>
			  备注：
				#springBind("acquisition.note")
				<textarea cols="30" rows="3" name="${status.expression}" id="note">$!{status.value}</textarea><br/><br/>				 
				
		<div class="form-but">
    		<button type="submit" id="allcheckbutton" class="button-s4">添加</button>
    		<button type="reset" id="allcheckbutton" class="button-s4" onClick="javascript:document.saveAcquisition.reset()">重置</button>
    		<button type="button" id="allcheckbutton" class="button-s4" onclick="javascript:location.href='list.html?isFirst=true';">返回 </button>
		</div>
		 
		 </form>

		 </center>
    </div>
